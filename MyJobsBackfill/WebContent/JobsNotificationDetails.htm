<!DOCTYPE html>
<html>
<head>

  <title>AGA3 - Notification Details
  </title>
<script src="js/html5sql.js"></script>  
<script src="js/MyJobsDB.js"></script>
<script src="js/MyJobsUtils.js"></script>
  <script type='text/javascript' src='js/jquery-1.11.1.min.js'></script>
  <script type='text/javascript' src='js/jquery.mobile-1.4.2.min.js'></script>
  <link rel="stylesheet" type="text/css" href="css/jquery.mobile-1.4.2.min.css">

<script src="js/jquery.mobile.datepicker.js"></script>
<script src="js/jquery-ui/datepicker.js"></script>


<script type='text/javascript' src="tablesorter/js/jquery.tablesorter.js"></script>
<script type='text/javascript' src="tablesorter/js/jquery.tablesorter.widgets.js"></script>

<script src="js/jquery.magnific-popup.min.js"></script>

<link rel="stylesheet" type="text/css" href="tablesorter/css/theme.jui.css">
<link rel="stylesheet" type="text/css" href="tablesorter/css/theme.bootstrap.css">
<link rel="stylesheet" type="text/css" href="tablesorter/docs/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/jquery-ui.css">
<link rel="stylesheet" href="css/magnific-popup.css" />

<script>
html5sql.openDatabase("com.PJO.MyJobs","MyJobs", 5*1024*1024);	
syncReference()
syncTransactional()
syncUpload()
</script>
  <script>
  //var db = openDatabase('MyJobsDB', '1.0', 'MyJobsDB', 2000000);
 var CurrentNotifNo="";
  var NotifNoID="";
	 var SelectedJobNo=getURLParameters("JobNo");
	 var SelectedStatus=getURLParameters("Status");
	 var SelectedCallback=getURLParameters("Callback");	
	 var SelectedNotifNo=getURLParameters("NotifNo");
	 if(SelectedCallback!='Order'){
		 res=SelectedNotifNo.split("|");
		 CurrentNotifNo=res[0];
		 NotifNoID=res[1];		 
	 }else{
		 CurrentNotifNo=SelectedNotifNo;
		 
	 }


//alert(SelectedNotifNo);
  var LatLongType=getURLParameters("LatLongType");
  var LatLong=getURLParameters("LatLong");
  var CurrentNotifType="";

	if(LatLongType=="#EquipmentGIS"){
		LatLongType="equipmentgis"
		updateNotifLatLong(SelectedNotifNo,LatLongType,LatLong);
		}
	if(LatLongType=="#FuncLocGIS"){
		LatLongType="funclocgis"
		updateNotifLatLong(SelectedNotifNo,LatLongType,LatLong);
		}

 
GetNotificationDetails();
function goBack()
{

	 if(SelectedCallback=='Order'){
		 window.location.href='JobsOrdersDetails.htm?JobNo='+SelectedJobNo+'&Status='+SelectedStatus+'&NotifNo='+SelectedNotifNo
	 
	 }else{
		 window.location.href='JobsNotifications.htm'
		 
	 }
	
}
function GetNotificationDetails(){
var Stripe="";
var opMap="";
var opAppt=""
var HTMLToOutput='';
var n=1;


SQLStatement="SELECT MyNotifications.notifno, MyNotifications.reportedon, MyNotifications.reportedby, MyNotifications.type, MyNotifications.shorttext, MyNotifications.longtext, MyNotifications.funcloc, MyNotifications.equipment, MyNotifications.orderno, "
SQLStatement+=" MyNotifications.plant, MyNotifications.priority, MyNotifications.funclocgis, MyNotifications.equipmentgis  "
SQLStatement+=" From MyNotifications "
	if(SelectedCallback!='Order'){
		SQLStatement+=" where MyNotifications.id = '"+NotifNoID+"'"
		}else{	
		SQLStatement+=" where MyNotifications.notifno = '"+CurrentNotifNo+"'"	
		}


	html5sql.process(SQLStatement,
	 function(transaction, results, rowsArray){
			item = rowsArray[0];
				

			$( "#NotifNo").html(item.type+" - "+item.notifno);
			CurrentNotifType=item.type;
			$( "#ReportedOn").html(item.reportedon);
			$( "#ReportedBy").html(item.reportedby);
								
			$( "#Type").html(item.type);
			$( "#Description").html(item.shorttext);
			$( "#OrderNo").html(item.orderno);
			$( "#Plant").html(item.plant);
			$( "#Priority").html(item.priority);
			
		    $( "#FuncLoc").html(item.funcloc);
			$( "#FuncLocGIS").html(item.funclocgis);
			$( "#Equipment").html(item.equipment);
			$( "#EquipmentGIS").html(item.equipmentgis);
				$( "#LongText").html(item.longtext);
	 },
	 function(error, statement){
		
	 }        
	);

}

  </script>

 <style type='text/css'>
  .stripe{
	background-color: lightgrey; 
	color: black;
}
.checkboxtext
{
  /* Checkbox text */
  font-size: 110%;
  display: inline;
}
   .wrapper {
  position: relative;
  padding: 0 5px;
  height: 250px;
  overflow-y: auto;
}
 .mfp-fade.mfp-bg {
	opacity: 0.001; /* Chrome opacity transition bug */
	-webkit-transition: all 0.15s ease-out; 
	-moz-transition: all 0.15s ease-out; 
	transition: all 0.15s ease-out;
}
.mfp-fade.mfp-bg.mfp-ready {
	opacity: 0.8;
}
.mfp-fade.mfp-bg.mfp-removing {
	opacity: 0;
}

.mfp-fade.mfp-wrap .mfp-content {
	opacity: 0;
	-webkit-transition: all 0.15s ease-out; 
	-moz-transition: all 0.15s ease-out; 
	transition: all 0.15s ease-out;
}
.mfp-fade.mfp-wrap.mfp-ready .mfp-content {
	opacity: 1;
}
.mfp-fade.mfp-wrap.mfp-removing .mfp-content {
	opacity: 0;
}
  .block {
    border: 1px solid grey;
    width: 180px;
    height:150px;
    display: inline-block;
    margin: 1em 1em 1em 1em;

border-radius: 15px;
    left:50px
}
  .highlight {

     box-shadow: 5px 5px 5px #888888;

  }  
                .box {
    border: 1px solid #a1a1a1;
    padding: 10px 10px; 
    background: #dddddd;
    
    border-radius: 5px;
}  
.white-popup {
  position: relative;
  background: #FFF;
  padding: 20px;
  width: auto;
  max-width: 80%;
  margin: 20px auto;
}
.ui-btn-width {
    width: 200px !important;
}  
  </style>
 
</head>
<body>
<div align="center"  data-role="page" id="JobsNotificationDetailsTask"> 
	<div   data-role="header" data-position="fixed">
		
		<table width = "100%">
			<TR height="70px">
				<TD width = "20%" Valign="bottom" align="left">
				<a id="backLink" href="javascript:goBack()"      class="ui-btn ui-btn-width ui-btn-inline ui-icon-back ui-corner-all ui-shadow ui-btn-icon-left">
				<span class='txt'>Notifications</span></a></td>
				<TD width = "10%" Valign="bottom" align="center"></TD>
				<TD width = "40%" valign="Top" align= "center"><h1 style="font-size: 150%">
				<B><a onclick="window.location.href='JobsHome.htm'" style="color:black; text-decoration:none;">Notification Details</a></B></H1>
				<a href="#lastSyncDets" data-rel="popup"style="color:green; text-decoration:none;"> <Small><P id="lastsync"></p></A></small></TD>
				<TD width = "15%" Valign="bottom" align="right" ></TD>

				<TD width = "15%" Valign="bottom" align="right" >
								</td>
				
			</TR>
		</table>		
	
	</div> 

		


	


		<div  data-role="content">	

		
				<div data-role="collapsible" data-collapsed="false" data-content-theme="c">
					<h3>Notification Details: <B id="NotifNo">3100000123</B></h3>
					<table width = "95%">
						<TR>
							<TD valign = "left" width "10%">Start Date:&nbsp;</td><td width = "23%"> <B id="StartDate"></B></td>
							<TD valign = "left" width "10%">Priority:&nbsp;</td><td width = "24%"> <B id="Priority"></B></td>
							<TD valign = "left" width "10%">User Status:&nbsp;</td><td width = "23%"> <B id="User Status"></B></td>
						</TR>
						<TR>
							<TD width "10%">Site:&nbsp;</td><td width = "23%"> <B id="FuncLoc"></B></td>
							<TD width "10%">Process:&nbsp;</td><td width = "24%"> <B id="Process"></B></td>
							<TD width "10%">Equipment:&nbsp;</td><td width = "23%"> <B id="Equipment"></B></td>
						</TR>
						<TR>
							<TD width "10%">Type:&nbsp;</td><td width = "23%"> <B id="Type"></B></td>
							<TD width "10%">Order No:&nbsp;</td><td width = "24%"> <B id="OrderNo"></B></td>
							<TD width "10%">Plant:&nbsp;</td><td width = "23%"> <B id="Plant"></B></td>
						</TR>
						<TR>
							<TD width "10%">Problem Group:&nbsp;</td><td width = "23%"> <B id="ProblemGroup"></B></td>
							<TD width "10%">Problem:&nbsp;</td><td width = "24%"> <B id="ReportedOn"></B></td>
							<TD width "10%">Reported By:&nbsp;</td><td width = "23%"> <B id="ReportedBy"></B></td>
						</TR>

						<TR>
							<TD width "15%">Description:&nbsp;</td><td colspan = "5"> <B id="Description"></B></td>

						</TR>
						<TR>
							<TD width "15%">Long Text:&nbsp;</td><td colspan = "5"> <P id="LongText"></p></td>
						</TR>						
					</table>
				</div>
				<div data-role="collapsible" data-collapsed="false" data-content-theme="c">
					<h3>Effects</h3>
					<table width = "95%">
						<TH>
							<TD  colspan = "2" width ="33%"><H4>Local Effects:&nbsp;</H4></td>
							<TD  colspan = "2" width ="34%"><H4>Site Effects:&nbsp;</H4></td>
							<TD  colspan = "2" width ="33%"><H4>Cause for Local Effects:&nbsp;</H4></td>
						</TH>
						<TR>
							<TD align="right" width "10%">Text:&nbsp;</td><td width = "23%"><input type = "text" id = "LocalEffect_Text" value =""></td>
							<TD align="right" width "10%">Text:&nbsp;</td><td width = "24%"><input type = "text" id = "SiteEffect_Text" value =""></td>
							<TD align="right" width "10%">Text:&nbsp;</td><td width = "23%"><input type = "text" id = "Cause_Text" value =""></td>
						</TR>
						<TR>
							<TD align="right" width "10%">Effect:&nbsp;</td><td align = "left" width = "23%"> 

								<select name="LocalEffect_Effect" id="LocalEffect_Effect" data-mini="true">
								    <option value="standard">Effect1</option>
								    <option value="rush">Effect2</option>
								    <option value="express">Effect3</option>
								    <option value="overnight">Effect4</option>
								</select>
							</td>
							<TD align="right" width "10%">Effect:&nbsp;</td><td width = "23%"> 

								<select name="SiteEffect_Effect" id="SiteEffect_Effect" data-mini="true">
								    <option value="standard">SiteEffect1</option>
								    <option value="rush">SiteEffect2</option>
								    <option value="express">SiteEffect3</option>
								    <option value="overnight">SiteEffect4</option>
								</select>
							</td>
							<TD align="right" width "10%">Group:&nbsp;</td><td width = "24%"> 

								<select name="CauseGroup" id="CauseGroup" data-mini="true">
								    <option value="standard">CG1</option>
								    <option value="rush">CG2</option>
								    <option value="express">CG3</option>
								    <option value="overnight">CG4</option>
								</select>
							</td>
							
						</TR>

						<TR>
							<TD Colspan = "4"></td>
								<TD align="right" width "10%">Code:&nbsp;</td>
								<td width = "23%"> 

								<select name="CauseCode" id="CauseCode" data-mini="true">
								    <option value="standard">CCode1</option>
								    <option value="rush">CCode2</option>
								    <option value="express">CCode3</option>
								    <option value="overnight">CCode4</option>
								</select>
							</td>
						</TR>
						
					</table>					
					
					<div ></div>
				</div>						
				<div data-role="collapsible" data-collapsed="false" data-content-theme="c">
					<h3>Create Order From Notification</h3>
					<B>Order Type, PM Activity Type and Order Type are mandatory in order create</B><BR>
					<B>reactive Order from this Notification</B>
					<table width = "50%">

						<TR>
							<TD align="right" width "25%">Order Type:&nbsp;</td><td align = "left" width = "75%"> 

								<select name="OrderType" id="OrderType" data-mini="true">
								    <option value="standard">Order type PM01</option>
								    <option value="rush">Order Type PM02</option>
								    <option value="express">Order Type PM03</option>
								    <option value="overnight">Order Type PM04</option>
								</select>
							</td>

							
						</TR>

						<TR>
							<TD align="right" width "25%">PM Activity Type:&nbsp;</td><td align = "left" width = "75%"> 

								<select name="OrderType" id="OrderType" data-mini="true">
								    <option value="standard">Activity type 01</option>
								    <option value="rush">Activity Type 02</option>
								    <option value="express">Activity Type 03</option>
								    <option value="overnight">Activity Type 04</option>
								</select>
							</td>

							
						</TR>

						<TR>
							<TD align="right" width "10%">Order Text:&nbsp;</td><td width = "23%"><input type = "text" id = "LocalEffect_Text" value =""></td>
						</TR>						
					</table>					
					
					<div ></div>
				</div>
				<div data-role="collapsible" data-collapsed="false" data-content-theme="c">
					<h3>Notification User Status</h3>

					<table width = "95%">
							<TR>
								<TD width ="30%">Generic H&S Guide Cons:<td  width = "20%">
								<select name="Stat01" id="Stat01" data-role="slider" data-mini="true">
								<option selected value="No">No</option>
								<option value="Yes">Yes</option>
								</select>
								</td>
								<TD width ="30%">No H&S Guide Cons:<td  width = "20%">
								<select name="Stat02" id="Stat02" data-role="slider" data-mini="true">
								<option selected value="No">No</option>
								<option value="Yes">Yes</option>
								</select>
								</td>

							</TR>	
							<TR>
								<TD width ="30%">Site Specific H&S Guide Cons:<td  width = "20%">
								<select name="Stat03" id="Stat03" data-role="slider" data-mini="true">
								<option selected value="No">No</option>
								<option value="Yes">Yes</option>
								</select>
								</td>
								<TD width ="30%">Unable to Start:<td  width = "20%">
								<select name="Stat04" id="Stat04" data-role="slider" data-mini="true">
								<option selected value="No">No</option>
								<option value="Yes">Yes</option>
								</select>
								</td>

							</TR>
							<TR>
								<TD width ="30%">High Value Capex request:<td  width = "20%">
								<select name="Stat05" id="Stat05" data-role="slider" data-mini="true">
								<option selected value="No">No</option>
								<option  value="Yes">Yes</option>
								</select>
								</td>
								<TD width ="30%"></TD><td  width = "20%">
								
								</td>

							</TR>
							
							</table>			
					
					<div ></div>
				</div>
	</div>

	<div style='display:none'>	
			<div data-role="popup" id="lastSyncDets">
			  <p id='referenceSyncDetails' ></p>
			  <p id='transactionalSyncDetails' ></p>
			  <p id='uploadSyncDetails' ></p>
			</div>
	</div>



	

</div>






<Script>
if(SelectedCallback=='Order'){
	$('#backLink .txt').text("Order Details");
}else{
	$('#backLink .txt').text("Notifications"); 
}
function showMap(type)
{

window.location.href='JobsLocateOnMap.htm?CallBack=Notification&NotifNo='+SelectedNotifNo+'&Type='+type+'&LatLong='+$( type).html()
}
function GoToTasks()
{

loc="JobsNotificationDetailsTasks.htm?NotifNo="+SelectedNotifNo+"&Type="+"ZM&JobNo="+SelectedJobNo+'&Status='+SelectedStatus+'&Callback='+SelectedCallback   //CurrentNotifType
window.location.href=loc;
}





</script>  
  


<script type='text/javascript'>

  
$('table').tablesorter({

    // *** APPEARANCE ***
    // Add a theme - try 'blackice', 'blue', 'dark', 'default'
    //  'dropbox', 'green', 'grey' or 'ice'
    // to use 'bootstrap' or 'jui', you'll need to add the "uitheme"
    // widget and also set it to the same name
    // this option only adds a table class name "tablesorter-{theme}"
    theme: 'jui',

    // fix the column widths
    widthFixed: false,

    // Show an indeterminate timer icon in the header when the table
    // is sorted or filtered
    showProcessing: false,

    // header layout template (HTML ok); {content} = innerHTML,
    // {icon} = <i/> (class from cssIcon)
    headerTemplate: '{content}{icon}',

    // return the modified template string
    onRenderTemplate: null, // function(index, template){ return template; },

    // called after each header cell is rendered, use index to target the column
    // customize header HTML
    onRenderHeader: function (index) {
        // the span wrapper is added by default
        $(this).find('div.tablesorter-header-inner').addClass('roundedCorners');
    },

    // *** FUNCTIONALITY ***
    // prevent text selection in header
    cancelSelection: true,

    // other options: "ddmmyyyy" & "yyyymmdd"
    dateFormat: "mmddyyyy",

    // The key used to select more than one column for multi-column
    // sorting.
    sortMultiSortKey: "shiftKey",

    // key used to remove sorting on a column
    sortResetKey: 'ctrlKey',

    // false for German "1.234.567,89" or French "1 234 567,89"
    usNumberFormat: true,

    // If true, parsing of all table cell data will be delayed
    // until the user initializes a sort
    delayInit: false,

    // if true, server-side sorting should be performed because
    // client-side sorting will be disabled, but the ui and events
    // will still be used.
    serverSideSorting: false,

    // *** SORT OPTIONS ***
    // These are detected by default,
    // but you can change or disable them
    // these can also be set using data-attributes or class names
    headers: {
        // set "sorter : false" (no quotes) to disable the column
        0: {
            sorter: "text"
        },
        1: {
            sorter: "text"
        },
        2: {
            sorter: "date"
        },
        3: {
            sorter: "date"
        },
        4: {
            sorter: "text"
        },
        5: {
            sorter: "false"
        },
        6: {
            sorter: "text"
        },
        7: {
            sorter: "text"
        },
        8: {
            sorter: "false"
        }
    },

    // ignore case while sorting
    ignoreCase: true,

    // forces the user to have this/these column(s) sorted first
    sortForce: null,
    // initial sort order of the columns, example sortList: [[0,0],[1,0]],
    // [[columnIndex, sortDirection], ... ]
    sortList: [
        [0, 0]

    ],
    // default sort that is added to the end of the users sort
    // selection.
    sortAppend: null,

    // starting sort direction "asc" or "desc"
    sortInitialOrder: "asc",

    // Replace equivalent character (accented characters) to allow
    // for alphanumeric sorting
    sortLocaleCompare: false,

    // third click on the header will reset column to default - unsorted
    sortReset: false,

    // restart sort to "sortInitialOrder" when clicking on previously
    // unsorted columns
    sortRestart: false,

    // sort empty cell to bottom, top, none, zero
    emptyTo: "bottom",

    // sort strings in numerical column as max, min, top, bottom, zero
    stringTo: "max",

    // extract text from the table - this is how is
    // it done by default
    textExtraction: {
        0: function (node) {
            return $(node).text();
        },
        1: function (node) {
            return $(node).text();
        }
    },

    // use custom text sorter
    // function(a,b){ return a.sort(b); } // basic sort
    textSorter: null,

    // *** WIDGETS ***

    // apply widgets on tablesorter initialization
    initWidgets: true,

    // include zebra and any other widgets, options:
    // 'columns', 'filter', 'stickyHeaders' & 'resizable'
    // 'uitheme' is another widget, but requires loading
    // a different skin and a jQuery UI theme.
    widgets: ['uitheme', 'zebra',  'columns'],

    widgetOptions: {
      // extra class name added to the sticky header row
      stickyHeaders : '',
      // number or jquery selector targeting the position:fixed element
      stickyHeaders_offset : 50,
      // added to table ID, if it exists
      stickyHeaders_cloneId : '-sticky',
      // trigger "resize" event on headers
      stickyHeaders_addResizeEvent : true,
      // if false and a caption exist, it won't be included in the sticky header
      stickyHeaders_includeCaption : true,
      // The zIndex of the stickyHeaders, allows the user to adjust this to their needs
      stickyHeaders_zIndex : 2,
      // jQuery selector or object to attach sticky header to
      stickyHeaders_attachTo : null,
      // scroll table top into view after filtering
      stickyHeaders_filteredToTop: true,
        // zebra widget: adding zebra striping, using content and
        // default styles - the ui css removes the background
        // from default even and odd class names included for this
        // demo to allow switching themes
        // [ "even", "odd" ]
        zebra: [
            "ui-widget-content even",
            "ui-state-default odd"],

        // uitheme widget: * Updated! in tablesorter v2.4 **
        // Instead of the array of icon class names, this option now
        // contains the name of the theme. Currently jQuery UI ("jui")
        // and Bootstrap ("bootstrap") themes are supported. To modify
        // the class names used, extend from the themes variable
        // look for the "$.extend($.tablesorter.themes.jui" code below
        uitheme: 'jui',

        // columns widget: change the default column class names
        // primary is the 1st column sorted, secondary is the 2nd, etc
        columns: [
            "primary",
            "secondary",
            "tertiary"],

        // columns widget: If true, the class names from the columns
        // option will also be added to the table tfoot.
        columns_tfoot: true,

        // columns widget: If true, the class names from the columns
        // option will also be added to the table thead.
        columns_thead: true,

        // filter widget: If there are child rows in the table (rows with
        // class name from "cssChildRow" option) and this option is true
        // and a match is found anywhere in the child row, then it will make
        // that row visible; default is false
        filter_childRows: false,

        // filter widget: If true, a filter will be added to the top of
        // each table column.
        filter_columnFilters: true,

        // filter widget: css class applied to the table row containing the
        // filters & the inputs within that row
        filter_cssFilter: "tablesorter-filter",

        // filter widget: Customize the filter widget by adding a select
        // dropdown with content, custom options or custom filter functions
        // see http://goo.gl/HQQLW for more details
        filter_functions: null,

        // filter widget: Set this option to true to hide the filter row
        // initially. The rows is revealed by hovering over the filter
        // row or giving any filter input/select focus.
        filter_hideFilters: false,

        // filter widget: Set this option to false to keep the searches
        // case sensitive
        filter_ignoreCase: true,

        // filter widget: jQuery selector string of an element used to
        // reset the filters.
        filter_reset: null,

        // Delay in milliseconds before the filter widget starts searching;
        // This option prevents searching for every character while typing
        // and should make searching large tables faster.
        filter_searchDelay: 300,

        // Set this option to true if filtering is performed on the server-side.
        filter_serversideFiltering: false,

        // filter widget: Set this option to true to use the filter to find
        // text from the start of the column. So typing in "a" will find
        // "albert" but not "frank", both have a's; default is false
        filter_startsWith: false,

        // filter widget: If true, ALL filter searches will only use parsed
        // data. To only use parsed data in specific columns, set this option
        // to false and add class name "filter-parsed" to the header
        filter_useParsedData: false,

        // Resizable widget: If this option is set to false, resized column
        // widths will not be saved. Previous saved values will be restored
        // on page reload
        resizable: true,

        // saveSort widget: If this option is set to false, new sorts will
        // not be saved. Any previous saved sort will be restored on page
        // reload.
        saveSort: true,

        // stickyHeaders widget: css class name applied to the sticky header
        stickyHeaders: "tablesorter-stickyHeader"

    },

    // *** CALLBACKS ***
    // function called after tablesorter has completed initialization
    initialized: function (table) {},

    // *** CSS CLASS NAMES ***
    tableClass: 'tablesorter',
    cssAsc: "tablesorter-headerSortUp",
    cssDesc: "tablesorter-headerSortDown",
    cssHeader: "tablesorter-header",
    cssHeaderRow: "tablesorter-headerRow",
    cssIcon: "tablesorter-icon",
    cssChildRow: "tablesorter-childRow",
    cssInfoBlock: "tablesorter-infoOnly",
    cssProcessing: "tablesorter-processing",

    // *** SELECTORS ***
    // jQuery selectors used to find the header cells.
    selectorHeaders: '> thead th, > thead td',

    // jQuery selector of content within selectorHeaders
    // that is clickable to trigger a sort.
    selectorSort: "th, td",

    // rows with this class name will be removed automatically
    // before updating the table cache - used by "update",
    // "addRows" and "appendCache"
    selectorRemove: "tr.remove-me",

    // *** DEBUGING ***
    // send messages to console
    debug: false

});

// Extend the themes to change any of the default class names ** NEW ** 
$.extend($.tablesorter.themes.jui, {
    // change default jQuery uitheme icons - find the full list of icons 
    // here: http://jqueryui.com/themeroller/ (hover over them for their name) 
    table: 'ui-widget ui-widget-content ui-corner-all', // table classes 
    header: 'ui-widget-header ui-corner-all ui-state-default', // header classes 
	footerRow: '',
	footerCells: '',
    icons: 'ui-icon',    // icon class added to the <i> in the header 
    sortNone: 'ui-icon-carat-2-n-s',
    sortAsc: 'ui-icon-carat-1-n',
    sortDesc: 'ui-icon-carat-1-s',
    active: 'ui-state-active', // applied when column is sorted 
    hover: 'ui-state-hover', // hover class 
    filterRow: '',
    even: 'ui-widget-content', // even row zebra striping 
    odd: 'ui-state-default' // odd row zebra striping 
});

$.extend($.tablesorter.themes.bootstrap, {
    // these classes are added to the table. To see other table classes available,
    // look here: http://twitter.github.com/bootstrap/base-css.html#tables
    table: 'table table-bordered table-striped',
    header: 'bootstrap-header', // give the header a gradient background
	footerRow  : '',
	footerCells: '',
    icons: '', // add "icon-white" to make them white; class added to the <i>
    sortNone: 'bootstrap-icon-unsorted',
    sortAsc: 'icon-chevron-up',
    sortDesc: 'icon-chevron-down',
    active: '', // applied when column is sorted
    hover: '', // use custom css here - bootstrap class may not override it
    filterRow: '', // filter row class
    even: '', // odd row zebra striping
    odd: '' // even row zebra striping
});
var w = null; // initialize variable
function startBGSync()
{

		 syncDT=localStorage.getItem('LastSyncedDT')		 
		 document.getElementById("lastsync").innerHTML = "Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)
		 syncDT=localStorage.getItem('LastSyncReference')
		 document.getElementById("referenceSyncDetails").innerHTML ="Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)+"<BR>"+localStorage.getItem('LastSyncReferenceDetails')+" "
		 syncDT=localStorage.getItem('LastSyncTransactional')
		 document.getElementById("transactionalSyncDetails").innerHTML ="Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)+"<BR>"+localStorage.getItem('LastSyncTransactionalDetails')+"  "
		 syncDT=localStorage.getItem('LastSyncUpload')
		 document.getElementById("uploadSyncDetails").innerHTML ="Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)+"<BR>"+localStorage.getItem('LastSyncUploadDetails')

   // First check whether Web Workers are supported
   if (typeof(Worker)!=="undefined"){
      // Check whether Web Worker has been created. If not, create a new Web Worker based on the Javascript file simple-timer.js
      if (w==null){
         w = new Worker("bgsync.js");
      }
      // Update timer div with output from Web Worker
      w.onmessage = function (event) {      
		 syncReference()
		 syncTransactional()
		 syncUpload()
		 syncDT=localStorage.getItem('LastSyncedDT')		 
		 document.getElementById("lastsync").innerHTML = "Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)
		 syncDT=localStorage.getItem('LastSyncReference')
		 document.getElementById("referenceSyncDetails").innerHTML ="Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)+"<BR>"+localStorage.getItem('LastSyncReferenceDetails')+" "
		 syncDT=localStorage.getItem('LastSyncTransactional')
		 document.getElementById("transactionalSyncDetails").innerHTML ="Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)+"<BR>"+localStorage.getItem('LastSyncTransactionalDetails')+"  "
		 syncDT=localStorage.getItem('LastSyncUpload')
		 document.getElementById("uploadSyncDetails").innerHTML ="Last Synced: "+syncDT.substring(0,4)+"-"+syncDT.substring(4,6)+"-"+syncDT.substring(6,8)+" "+syncDT.substring(8,10)+":"+syncDT.substring(10,12)+"<BR>"+localStorage.getItem('LastSyncUploadDetails')


		 };
   } else {
      // Web workers are not supported by your browser
      document.getElementById("lastsync").innerHTML = "Sorry, your browser does not support Web Workers ...";
   }
}

startBGSync();

</script>


</body>


</html>

